# Macros
# ======
ext_if = "em0"
int_if = "em1"
hostB = "192.168.2.3"
hostB_ssh = "222"

# Tables
# ======
table <BadHost> persist {}
table <linux> const {140.201.235.81, 140.201.235.82, 140.201.235.83, 140.201.235.84, 140.201.235.85, 140.201.235.86}
table <bsd> const {140.201.235.91, 140.201.235.92, 140.201.235.93, 140.201.235.94, 140.201.235.95, 140.201.235.96}
table <rfc1918> const { 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8 }

# settings
# ========
set skip on lo0 # all rule ignore loopback interface (lo0)

# NAT and portforwarding
# ======================
nat on $ext_if inet from $int_if:network to any -> $ext_if
rdr pass on $ext_if inet proto tcp to port $hostB_ssh -> $hostB port ssh

# FTP proxy
nat-anchor "ftp-proxy/*"
nat on $ext_if inet from $int_if -> ($ext_if)
rdr-anchor "ftp-proxy/*"
pass in on $ext_if inet proto tcp to $ext_if port 21 flags S/SA keep state
pass out on $int_if inet proto tcp to $hostB port 21 user proxy flags S/SA keep state
anchor "ftp-proxy/*"

# Filter Rules
# ============
block return on $ext_if all
block quick from <BadHost> to any

# pass all to NAT's ssh
pass in proto tcp from any to $ext_if port ssh keep state
# pass only <linux> to hostB's ssh
block in proto tcp from any to $ext_if port $hostB_ssh
pass in proto tcp from <linux> to $ext_if port $hostB_ssh keep state

# hostB's ftp, pass <linux>, block return <bsd>, block drop others
block in proto tcp from any to $ext_if port ftp
block return in proto tcp from <bsd> to $ext_if port ftp
pass in proto tcp from <linux> to $ext_if port ftp keep state

# block all icmp(ping) to NAT
block drop in on $ext_if inet proto icmp from any to $ext_if
